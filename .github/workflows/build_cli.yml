name: Build CLI

on: [push]

jobs:

  build-jar:
    name: Build default jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@master
        with:
          java-version: 11
          graalvm-version: 20.1.0
          native-image: true

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build CLI JAR
        run: gradle build

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: skript-cli.jar
          path: build/libs/*.jar

  build-ubuntu-mac:
    name: Build CLI for ${{ matrix.os }}
    needs: [build-jar]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@master
        with:
          java-version: 11
          graalvm-version: 20.1.0
          native-image: true

      - name: Get JAR Artifact
        uses: actions/download-artifact@v2
        with:
          name: skript-cli.jar

      - name: Setup Toolchain dependencies for Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install build-essential libz-dev zlib1g-dev

      - name: Build CLI for ${{ matrix.os }}
        run: native-image -jar skript-cli.jar --no-fallback --no-server -H:Class=com.olyno.skriptcli.CLI -H:Name=build/skript-cli/skript-cli
        
      - name: Check build
        run: |
          ls
          cd build
          ls
          cd skript-cli
          ls
          cd ../../

      - name: Make native secure
        if: startsWith(matrix.os, 'macos')
        run: xattr -d com.apple.quarantine build/skript-cli/skript-cli

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: skript-${{ matrix.os }}
          path: build/skript-cli/skript-cli

  build-windows:
    name: Build CLI for windows-latest
    needs: [build-jar]
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@master
        with:
          java-version: 11
          graalvm-version: 20.1.0
          native-image: true

      - name: Get JAR Artifact
        uses: actions/download-artifact@v2
        with:
          name: skript-cli.jar

      - name: Setup Toolchain dependencies for Windows
        run: choco install visualstudio2017-workload-vctools

      - name: Build CLI for windows-latest
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          native-image -jar skript-cli.jar --no-fallback --no-server -H:Class=com.olyno.skriptcli.CLI -H:Name=build/skript-cli/skript-cli.exe
      
      - name: Check build
        run: |
          ls
          cd build
          ls
          cd skript-cli
          ls
          cd ../../
        
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: skript-windows-latest.exe
          path: build/skript-cli/*.exe